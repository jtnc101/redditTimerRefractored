{"version":3,"sources":["styles/search/HeatMap.module.css","styles/search/Posts.module.css","styles/main-page/Info.module.css","styles/shared/Header.module.css","styles/main-page/Hero.module.css","styles/shared/Footer.module.css","styles/search/SearchBar.module.css","styles/search/Search.module.css","images/logo.svg","components/shared/Header.js","images/table.png","components/main-page/Hero.js","components/main-page/Info.js","images/sign.svg","components/shared/Footer.js","pages/MainPage.js","contexts/RedditDataContext.js","contexts/SubredditContext.js","contexts/CellContext.js","adapters/getAPIData.js","utils/retrieveRedditData.js","utils/get2DZeroArray.js","components/search-page/HeatMap.js","utils/imageLoader.js","utils/processHeatMap.js","utils/processTime.js","components/search-page/Posts.js","components/search-page/SearchBar.js","pages/SearchPage.js","App.js","index.js"],"names":["module","exports","Header","appName","className","HeaderCSS","headerContainer","to","src","logo","alt","search","headerLinks","href","Hero","HeroCSS","container","title","subtitle","type","showMeButton","table","tableImage","Info","InfoCSS","mainContainer","secondaryContainer","subContainer","name","id","list","Footer","FooterCSS","links","sign","MainPage","RedditDataContext","createContext","RedditDataProvider","props","useState","redditData","setRedditData","Provider","value","children","SubredditContext","SubredditProvider","subreddit","setSubreddit","CellContext","CellProvider","cell","setCell","getAPIData","url","a","fetch","response","json","data","retrieveRedditData","console","log","after","totalRecords","redditLimitPerCall","d","i","newURL","get2DZeroArray","numOfRows","numOfColumns","outerArray","innerArray","Array","fill","push","HeatMap","useContext","row","heatMap","setHeatMap","retrieveAPIData","document","getElementById","style","display","updateHeatMap","heatMapSubstitute","utcTime","created_utc","date","Date","day","getDay","hour","getHours","e","processHeatMap","useEffect","HeatMapCSS","loader","cellSpacing","headerRow","colSpan","timeHeader","tdWeekday","map","item","index","onClick","processTime","hours","minutes","minutesString","Posts","allPosts","setAllPosts","lastPost","found","utcDate","cellData","titleLink","permalink","timePosted","getMinutes","score","comments","num_comments","author","oldState","getPosts","PostsCSS","th","td","link","SearchBar","match","setSearch","useNavigate","SearchBarCSS","onSubmit","preventDefault","textField","onChange","target","searchButton","SearchPage","SearchCSS","App","path","exact","element","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d25da365.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeHeader\":\"HeatMap_timeHeader__2FLv3\",\"tdWeekday\":\"HeatMap_tdWeekday__3LwBl\",\"tdHourEntry\":\"HeatMap_tdHourEntry__3t3ZA\",\"container\":\"HeatMap_container__1n1YT\",\"headerRow\":\"HeatMap_headerRow__3Cmyo\",\"table\":\"HeatMap_table__1UgCO\",\"loader\":\"HeatMap_loader__1rXwR\",\"spin\":\"HeatMap_spin__3sZ1t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Posts_container__K7BTc\",\"subContainer\":\"Posts_subContainer__KzArJ\",\"title\":\"Posts_title__17cdr\",\"table\":\"Posts_table__H9jUT\",\"th\":\"Posts_th__3H8-2\",\"td\":\"Posts_td__1ratI\",\"link\":\"Posts_link__3kS-M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Info_mainContainer__3SFoV\",\"secondaryContainer\":\"Info_secondaryContainer__1e5Ia\",\"subContainer\":\"Info_subContainer__3-bkj\",\"title\":\"Info_title__1f-Dc\",\"list\":\"Info_list__1aNfe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Header_headerContainer__38fN5\",\"headerLinks\":\"Header_headerLinks__2gFYs\",\"search\":\"Header_search__2RznQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Hero_container__2a0An\",\"title\":\"Hero_title__12D04\",\"subtitle\":\"Hero_subtitle__f_d64\",\"showMeButton\":\"Hero_showMeButton__2eODa\",\"searchText\":\"Hero_searchText__1iRUO\",\"tableImage\":\"Hero_tableImage__3n2Xc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__3GiBt\",\"links\":\"Footer_links__3qbIH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchBar_container__3t30O\",\"textField\":\"SearchBar_textField__2IlAt\",\"searchButton\":\"SearchBar_searchButton__3jiJh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Search_title__2Wk-e\"};","export default __webpack_public_path__ + \"static/media/logo.47ec2a15.svg\";","import React from 'react';\r\nimport logo from '../../images/logo.svg';\r\nimport HeaderCSS from '../../styles/shared/Header.module.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Header = () => {\r\n    \r\n    const appName = \"redditTimerRefractored\";\r\n    // used at github.\r\n\r\n    return (\r\n        <header className={HeaderCSS.headerContainer}>\r\n            <Link to={`/${appName}`}><img src={logo} alt=\"logo\" /></Link>\r\n            <Link className={`${HeaderCSS.search} ${HeaderCSS.headerLinks} `} to={`/${appName}/search`}>Search</Link>\r\n            <a className={HeaderCSS.headerLinks} href={`/${appName}/#how-it-works`} >How it works</a>\r\n            <a className={HeaderCSS.headerLinks} href={`/${appName}/#about`} >About</a>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/table.4c9a5231.png\";","import React from 'react';\r\nimport HeroCSS from '../../styles/main-page/Hero.module.css';\r\nimport table from '../../images/table.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Hero = () => {\r\n\r\n    const appName = \"redditTimerRefractored\";\r\n\r\n    return (\r\n\r\n        <div className={HeroCSS.container}>\r\n            <span className={HeroCSS.title}>No reactions to your reddit posts?</span>\r\n            <span className={HeroCSS.subtitle}>\r\n            Great timing, great results! Find the best time to post on your subreddit.\r\n            </span>\r\n            <Link to={`/${appName}/search`}><button type=\"button\" className={HeroCSS.showMeButton}><span>SHOW ME THE BEST TIME</span></button></Link>\r\n            <Link to={`/${appName}/search`} ><img src={table} alt=\"table\" className={HeroCSS.tableImage} /></Link>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Hero;","import React from 'react';\r\nimport InfoCSS from '../../styles/main-page/Info.module.css';\r\n\r\nconst Info = () => {\r\n  return (\r\n    <div className={InfoCSS.mainContainer}>\r\n      <div className={InfoCSS.secondaryContainer}>\r\n        <div className={InfoCSS.subContainer}>\r\n          <span className={InfoCSS.title} name=\"how-it-works\" id=\"how-it-works\">How it works</span>\r\n          <div className={InfoCSS.list}>\r\n            <li>We find the 500 top posts from the past year for a subreddit.</li>\r\n            <li>The data is visualized in a heatmap grouped by weekday and hour of the day.</li>\r\n            <li>See immediately when to submit your reddit post.</li>\r\n          </div>\r\n        </div>\r\n        <div className={InfoCSS.subContainer}>\r\n          <span className={InfoCSS.title} name=\"about\" id=\"about\">About</span>\r\n          <div>\r\n            <div>\r\n              The front page of the app was created with the guidance from <a href=\"https://profy.dev\">profy.dev</a>. \r\n            The goal is\r\n            </div>\r\n            <div>\r\n              to implement a pixel-perfect real-world application\r\n              with professional workflows\r\n            </div>\r\n            <div>\r\n              and tools like Kanban,ClickUp, Figma, Github, pull requests. \r\n              The search page and all of its \r\n            </div>\r\n            <div> \r\n              dynamic contents was independently\r\n              created. <a href=\"https://profy.dev/employers\"> Click here for more information.</a>\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Info;","export default __webpack_public_path__ + \"static/media/sign.0646f198.svg\";","import React from 'react';\r\nimport sign from '../../images/sign.svg';\r\nimport FooterCSS from '../../styles/shared/Footer.module.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n\r\n    const appName = \"redditTimerRefractored\";\r\n\r\n    return (\r\n        <footer className={FooterCSS.container}>\r\n            {/* <a href=\"https://profy.dev/employers\" className={FooterCSS.links}>profy.dev</a>\r\n            <Link to={`/${appName}/`}><img src={sign} alt=\"sign\"/></Link>\r\n            <Link to={`/${appName}/terms`} className={FooterCSS.links}>Terms & Privacy</Link> */}\r\n            <a href=\"https://profy.dev/employers\" className={FooterCSS.links}>profy.dev</a>\r\n            <Link to={`/${appName}`}><img src={sign} alt=\"sign\"/></Link>\r\n            <Link to={\"/terms\"} className={FooterCSS.links}>Terms & Privacy</Link>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport Header from \"../components/shared/Header\";\r\nimport Hero from \"../components/main-page/Hero\";\r\nimport Info from \"../components/main-page/Info\";\r\nimport Footer from \"../components/shared/Footer\";\r\n\r\nconst MainPage = () => {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Hero />\r\n            <Info />\r\n            <Footer />   \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainPage;\r\n","import React, { createContext,useState } from \"react\";\r\n\r\nexport const RedditDataContext = createContext();\r\n\r\nexport const RedditDataProvider = (props) => {\r\n\r\n    const [redditData, setRedditData] = useState([]);\r\n\r\n    return (\r\n        <RedditDataContext.Provider value={[redditData, setRedditData]}>\r\n            {props.children}\r\n        </RedditDataContext.Provider>\r\n    );\r\n}","import React, { createContext,useState } from 'react';\r\n\r\nexport const SubredditContext = createContext();\r\n\r\nexport const SubredditProvider = (props) => {\r\n\r\n    // subreddit state is the subreddit forum the users chooses.\r\n    const [subreddit, setSubreddit] = useState('');\r\n    \r\n    return (\r\n\r\n        <SubredditContext.Provider value = {[subreddit,setSubreddit]} >\r\n\r\n            {props.children}\r\n\r\n        </SubredditContext.Provider>\r\n    );\r\n}","import React, { createContext, useState } from 'react';\r\n\r\nexport const CellContext = createContext();\r\n\r\nexport const CellProvider = (props) => {\r\n\r\n    // Cell holds information pertaining to the cell clicked on the heat map. Its value determines how many posts need to be \r\n    // generated in the Posts section. \r\n    // cell is an array with 3 values. cell[0] is row of the heat map. cell[1] is column of the heat map. cell[2] is the value in the cell. \r\n    // ie. the number of posts at that specific timeslot.\r\n\r\n    const [cell, setCell] = useState([]);\r\n\r\n    return (\r\n\r\n        <CellContext.Provider value={[cell, setCell]} >\r\n\r\n            {props.children} \r\n\r\n        </CellContext.Provider>\r\n    )\r\n}","// api call \r\n\r\nexport default async function getAPIData( url ) {\r\n\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    return data;\r\n\r\n}\r\n","import getAPIData from \"../adapters/getAPIData\";\r\nimport { startLoader, stopLoader } from \"./imageLoader\";\r\n\r\n// retreiving Reddit api for top 500 posts of a subreddit.\r\n// Reddit api limits to 100 retreival of posts. \r\n// Subsequent post must be retrieved looking up the returned \r\n// value of 'after' key. If data 1-100 was just retrieved, after will \r\n// the value of records 101 -200.\r\n\r\nexport async function retrieveRedditData(url, subreddit) {\r\n\r\n\r\n   \r\n    try {\r\n\r\n        // startLoader();\r\n        let data = await getAPIData(url);\r\n        console.log(data);\r\n\r\n        let after= data.data.after;\r\n\r\n        const totalRecords = 500;\r\n        const redditLimitPerCall = 100;\r\n\r\n        let newURL;\r\n\r\n        let d = data.data.children;\r\n\r\n        for( let i=1; i< totalRecords/redditLimitPerCall; i++ ) {\r\n            // newURL = `https://www.reddit.com/r/${match.params.id}/top.json?limit=100&t=year&after=${after}`;\r\n            newURL = `https://www.reddit.com/r/${subreddit}/top.json?limit=100&t=year&after=${after}`;\r\n            data = await getAPIData(newURL);\r\n\r\n            d= [...d, ...data.data.children];\r\n\r\n            after = data.data.after;\r\n        }\r\n\r\n        // stopLoader();\r\n        \r\n        return d;\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","export function get2DZeroArray( numOfRows, numOfColumns) {\r\n\r\n    let outerArray = [];\r\n    for ( let i = 0; i < numOfRows; i++ ) {\r\n        let innerArray = new Array(numOfColumns);\r\n        innerArray.fill(0);\r\n        outerArray.push(innerArray);\r\n    }\r\n    return outerArray;\r\n}","import React from 'react';\r\nimport HeatMapCSS from '../../styles/search/HeatMap.module.css';\r\nimport { RedditDataContext } from '../../contexts/RedditDataContext';\r\nimport { useContext, useEffect,useState } from 'react';\r\nimport { SubredditContext } from '../../contexts/SubredditContext';\r\nimport { CellContext } from '../../contexts/CellContext';\r\nimport '../../styles/search/heatMap.css';\r\nimport { retrieveRedditData } from '../../utils/retrieveRedditData';\r\nimport { get2DZeroArray } from '../../utils/get2DZeroArray';\r\nimport { startLoader, stopLoader } from '../../utils/imageLoader';\r\nimport { processHeatMap } from '../../utils/processHeatMap';\r\n\r\nconst HeatMap = () => {\r\n\r\n    const [redditData, setRedditData] = useContext(RedditDataContext);\r\n    const [subreddit, setSubreddit] = useContext(SubredditContext);\r\n    const [cell, setCell] = useContext(CellContext);\r\n\r\n    let row = new Array(24);\r\n    row.fill(0);\r\n\r\n    const numOfRows = 7;\r\n    const numOfColumns = 24;\r\n    const [heatMap, setHeatMap ] = useState( get2DZeroArray(numOfRows, numOfColumns));\r\n\r\n    const url = `https://www.reddit.com/r/${subreddit}/top.json?limit=100&t=year`;\r\n\r\n    const retrieveAPIData = async () => {\r\n\r\n        setCell([]);\r\n        startLoader();\r\n        setRedditData( await retrieveRedditData(url, subreddit));\r\n        stopLoader();\r\n    }\r\n\r\n    const updateHeatMap = () => {\r\n        setHeatMap( processHeatMap(redditData));\r\n    }\r\n    useEffect( ()=> {\r\n        retrieveAPIData();     \r\n    }, [subreddit]);\r\n\r\n    useEffect ( () => {\r\n        updateHeatMap();\r\n    }, [redditData]);\r\n\r\n\r\n    return(\r\n\r\n        <div className={HeatMapCSS.container} >\r\n            <div id='loader' className={HeatMapCSS.loader}/>\r\n            <table id='table' className={HeatMapCSS.table} cellSpacing=\"0\">\r\n                <tr className={HeatMapCSS.headerRow}>\r\n                    <th colSpan=\"4\" />\r\n                    <th colSpan=\"2\" className={HeatMapCSS.timeHeader}>12:00am</th>\r\n                    <th colSpan=\"2\" className={HeatMapCSS.timeHeader}>2:00am</th>\r\n                    <th colSpan=\"2\" className={HeatMapCSS.timeHeader}>4:00am</th>\r\n                    <th colSpan=\"2\" className={HeatMapCSS.timeHeader}>6:00am</th>\r\n                    <th colSpan=\"2\" className={HeatMapCSS.timeHeader}>8:00am</th>\r\n                    <th colSpan=\"2\" className={HeatMapCSS.timeHeader}>10:00am</th>\r\n                    <th colSpan=\"2\" className={HeatMapCSS.timeHeader}>12:00pm</th>\r\n                    <th colSpan=\"2\" className={HeatMapCSS.timeHeader}>2:00pm</th>\r\n                    <th colSpan=\"2\" className={HeatMapCSS.timeHeader}>4:00pm</th>\r\n                    <th colSpan=\"2\" className={HeatMapCSS.timeHeader}>6:00pm</th>\r\n                    <th colSpan=\"2\" className={HeatMapCSS.timeHeader}>8:00pm</th>\r\n                    <th colSpan=\"2\" className={HeatMapCSS.timeHeader}>10:00pm</th>\r\n                </tr>\r\n                <tr >\r\n                    <td colSpan=\"4\" className={HeatMapCSS.tdWeekday}>Sunday</td>\r\n                    { row.map( (item,index) => \r\n                        <td \r\n                            id={index}\r\n                            onClick={ () => setCell( [0,index,heatMap[0][index]])}\r\n                            className={ \"tdHourEntry \" + ((heatMap[0][index] >= 10)? 'element10' : `element${heatMap[0][index] } `)}\r\n                        >\r\n\r\n                            {heatMap[0][index]}\r\n                        \r\n                        </td> )}\r\n                </tr>\r\n\r\n                <tr >\r\n                    <td colSpan=\"4\" className={HeatMapCSS.tdWeekday}>Monday</td>\r\n                    { row.map( (item,index) => \r\n                        <td \r\n                            id={index}\r\n                            onClick={ () => setCell( [1,index,heatMap[1][index] ] )}\r\n                            className={ \"tdHourEntry \" + ((heatMap[1][index] >= 10)? 'element10' : `element${heatMap[1][index] } `)}  \r\n                        >\r\n\r\n                            {heatMap[1][index]}\r\n\r\n                        </td> )}\r\n                </tr>\r\n\r\n                <tr >\r\n                    <td colSpan=\"4\" className={HeatMapCSS.tdWeekday}>Tuesday</td>\r\n                    { row.map( (item,index) => \r\n                        <td \r\n                            id={index}\r\n                            onClick={ () => setCell( [2,index,heatMap[2][index] ])} \r\n                            className= { \"tdHourEntry \" + ((heatMap[2][index] >= 10)? 'element10' : `element${heatMap[2][index] } `)} \r\n                        >\r\n                            {heatMap[2][index]}\r\n                        </td> )}\r\n                </tr>\r\n\r\n                <tr >\r\n                    <td colSpan=\"4\" className={HeatMapCSS.tdWeekday}>Wednesday</td>\r\n                    { row.map( (item,index) => \r\n                        <td\r\n                            id={index}\r\n                            onClick={ () => setCell( [3,index,heatMap[3][index]])} \r\n                            className= { \"tdHourEntry \" + ((heatMap[3][index] >= 10)? 'element10' : `element${heatMap[3][index] } `)} \r\n                        >\r\n                            {heatMap[3][index]}\r\n                        </td> )}\r\n                </tr>\r\n\r\n                <tr >\r\n                    <td colSpan=\"4\" className={HeatMapCSS.tdWeekday}>Thursday</td>\r\n                    { row.map( (item,index) => \r\n                        <td \r\n                            id={index}\r\n                            onClick={ () => setCell( [4,index,heatMap[4][index]])} \r\n                            className={ \"tdHourEntry \" + ((heatMap[4][index] >= 10)? 'element10' : `element${heatMap[4][index] } `)} \r\n                        >\r\n                            {heatMap[4][index]}\r\n                        </td> )}\r\n                </tr>\r\n\r\n                <tr >\r\n                    <td colSpan=\"4\" className={HeatMapCSS.tdWeekday}>Friday</td>\r\n                    { row.map( (item,index) => \r\n                        <td \r\n                            id={index}\r\n                            onClick={ () => setCell( [5,index,heatMap[5][index]])} \r\n                            className= { \"tdHourEntry \" + ((heatMap[5][index] >= 10)? 'element10' : `element${heatMap[5][index] } `)} \r\n                        >\r\n                            {heatMap[5][index]}\r\n                        </td> )}\r\n                </tr>\r\n\r\n                <tr >\r\n                    <td colSpan=\"4\" className={HeatMapCSS.tdWeekday}>Saturday</td>\r\n                    { row.map( (item,index) => \r\n                        <td \r\n                            id={index}\r\n                            onClick={ () => setCell( [6,index,heatMap[6][index]])} \r\n                            className={ \"tdHourEntry \" + ((heatMap[6][index] >= 10)? 'element10' : `element${heatMap[6][index] } `)}\r\n                        >\r\n                            {heatMap[6][index]}\r\n                        </td> )}\r\n                </tr>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default HeatMap;","export function startLoader() {\r\n    document.getElementById('loader').style.display= 'block';\r\n    document.getElementById('table').style.display = 'none';\r\n};\r\n\r\nexport function stopLoader() {\r\n    document.getElementById('loader').style.display= 'none';\r\n    document.getElementById('table').style.display = 'block';\r\n}","// take redditData and process it into a 2d heat map. Indices of each cell\r\n// corresponds to day of the week and hour. The value of the cell is the total count\r\n// of posts made in that hour frame.\r\n\r\nimport { get2DZeroArray } from \"./get2DZeroArray\";\r\n// import { RedditDataContext } from \"../contexts/RedditDataContext\";\r\n// import { useContext } from \"react\";\r\n\r\nexport function processHeatMap (redditData) {\r\n\r\n    //const { redditData, setRedditData } = useContext( RedditDataContext );\r\n    const numOfRows = 7;\r\n    const numOfColumns = 24;\r\n\r\n    let heatMapSubstitute = get2DZeroArray(numOfRows, numOfColumns);\r\n    try {\r\n        for( let i= 0; i < 500; i++ ) {\r\n\r\n            let utcTime = redditData[i].data.created_utc;\r\n            let date = new Date(utcTime*1000);\r\n            let day = date.getDay();\r\n            let hour = date.getHours();\r\n\r\n            heatMapSubstitute[day][hour] += 1;\r\n        }\r\n    }   \r\n    catch(e) {\r\n        console.log(e);\r\n    }\r\n\r\n    return( heatMapSubstitute );\r\n\r\n}","// Takes a time in 24 hour format and returns a string of \r\n// format XX:YY am/pm\r\n\r\nexport function processTime (hours, minutes) {\r\n\r\n    const minutesString = (minutes < 10)? \"0\"+minutes: \"\"+minutes;\r\n    if( hours === 0 ){\r\n        return (\"12:\"+minutesString+\" am\");\r\n    } else if ( hours < 12 ) {\r\n        return ( hours+\":\"+minutesString+\" am\");\r\n    } else if ( hours > 12 ) {\r\n        return ( (hours - 12)+\":\" +  minutesString + \" pm\");\r\n    } else {\r\n        return (hours+\":\" + minutesString+ \" pm\");\r\n    }\r\n}","import React, {useContext,useEffect,useState} from 'react';\r\nimport { CellContext } from '../../contexts/CellContext';\r\nimport PostsCSS from '../../styles/search/Posts.module.css';\r\nimport { RedditDataContext } from '../../contexts/RedditDataContext';\r\nimport { processTime } from '../../utils/processTime';\r\n\r\nconst Posts = () => {\r\n    const [cell, setCell] = useContext(CellContext);\r\n    const [redditData, setRedditData] = useContext(RedditDataContext);\r\n\r\n    const[allPosts, setAllPosts] = useState([]);\r\n\r\n    let row = new Array( cell[2]);\r\n\r\n    const getPosts = () => {\r\n\r\n        try {\r\n\r\n            const lastPost = cell[2];\r\n            let found = 0;\r\n\r\n            for( let i = 0; i< 500; i++ ){\r\n                if( found === lastPost ) {\r\n                    break;\r\n                }\r\n                let data = redditData[i].data;\r\n                let utcDate = new Date(data.created_utc*1000);\r\n                if ( utcDate.getDay() === cell[0] && utcDate.getHours() === cell[1] ) {\r\n                    found++;\r\n                    let cellData = {};\r\n                    cellData.title = data.title;\r\n                    cellData.titleLink = data.permalink;\r\n                    cellData.timePosted = processTime( utcDate.getHours() , utcDate.getMinutes());\r\n                    cellData.score = data.score;\r\n                    cellData.comments = data.num_comments;\r\n                    cellData.author = data.author;\r\n\r\n                    setAllPosts( oldState=> [ ...oldState, cellData] );\r\n                }\r\n\r\n            }\r\n\r\n            console.log(allPosts);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n    }\r\n    useEffect( () => {\r\n        setAllPosts([]);\r\n        getPosts();\r\n    }, [cell]);\r\n\r\n    return (\r\n        <div className={PostsCSS.container}>\r\n            <div className={PostsCSS.subContainer} >\r\n                <div className={PostsCSS.title}>Posts</div>\r\n                <table className={PostsCSS.table}>\r\n                    <tr >\r\n                        <th className={PostsCSS.th} colSpan=\"8\">Title</th>\r\n                        <th className={PostsCSS.th} colSpan=\"2\">Time Posted</th>\r\n                        <th className={PostsCSS.th} colSpan=\"1\">Score</th>\r\n                        <th className={PostsCSS.th} colSpan=\"2\">Comments</th>\r\n                        <th className={PostsCSS.th} colSpan=\"2\">Author</th>\r\n                    </tr>\r\n                    { allPosts.map( (item, index) => \r\n                        <tr key={index}>\r\n                            <td className={PostsCSS.td} colSpan=\"8\"> <a className={PostsCSS.link} href={`https://www.reddit.com/${item.titleLink}`} >{item.title}</a> </td>\r\n                            <td className={PostsCSS.td} colSpan=\"2\"> {item.timePosted} </td>\r\n                            <td className={PostsCSS.td} colSpan=\"1\"> {item.score} </td>\r\n                            <td className={PostsCSS.td} colSpan=\"2\"> {item.comments} </td>\r\n                            <td className={PostsCSS.td} colSpan=\"2\"> <a className={PostsCSS.link} href={`https://www.reddit.com/user/${item.author}`} >{item.author} </a></td>\r\n                        </tr>\r\n                    )}\r\n                </table>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Posts;","\r\nimport React from 'react';\r\nimport SearchBarCSS from '../../styles/search/SearchBar.module.css';\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n// import { useHistory } from 'react-router-dom';\r\n// import { SubredditContext } from './SubredditContext';\r\nimport { SubredditContext } from '../../contexts/SubredditContext';\r\nimport { useContext } from 'react';\r\n\r\nconst SearchBar = ({match}) => {\r\n    \r\n\r\n    const [ search, setSearch ] = useState(\"\");\r\n    const [ subreddit, setSubreddit ] = useContext(SubredditContext);\r\n    const navigate = useNavigate();\r\n    // const appName = \"reddit-timer\";\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSubreddit(search);\r\n        \r\n        // history.push(`/${appName}/search/${ search }`);\r\n        console.log( search);\r\n        // navigate.push(`/search/${ search }`);\r\n    }\r\n\r\n    return (\r\n        <div  >\r\n            {/* <div >subreddit : { subreddit } </div> */}\r\n            <form className={SearchBarCSS.container} onSubmit={ handleSubmit }>\r\n                <span >r /</span>\r\n                <input \r\n                    type=\"text\" \r\n// placeholder={ match.params.id}\r\n                    className={SearchBarCSS.textField}\r\n                    value={search}\r\n                    onChange={ (e) => setSearch(e.target.value) } \r\n                />\r\n                <button type=\"submit\" className={SearchBarCSS.searchButton}>SEARCH</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport SearchCSS from '../styles/search/Search.module.css';\r\n// import Header from './components/shared/Header';\r\nimport Header from '../components/shared/Header';\r\nimport Footer from '../components/shared/Footer';\r\n// import Footer from './Footer';\r\n// import SearchBar from './SearchBar';\r\n// import HeatMap from './HeatMap';\r\nimport HeatMap from '../components/search-page/HeatMap';\r\n// import { RedditDataProvider } from './RedditDataContext';\r\nimport { RedditDataProvider } from '../contexts/RedditDataContext';\r\n// import { SubredditProvider} from './SubredditContext';\r\nimport { SubredditProvider} from '../contexts/SubredditContext';\r\n// import { CellProvider } from './CellContext';\r\nimport { CellProvider } from '../contexts/CellContext';\r\n// import Posts from './Posts';\r\n// import Posts from '../components/search-page/Posts';\r\nimport Posts from '../components/search-page/Posts';\r\n\r\n\r\nimport SearchBar from '../components/search-page/SearchBar';\r\n\r\nconst SearchPage = ( {match} ) => {\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className={SearchCSS.title}>Find the best time for a subreddit</div>\r\n            <SubredditProvider >\r\n                <SearchBar match={match} />\r\n                <RedditDataProvider >\r\n                    <CellProvider>\r\n{/* <HeatMap match={match} /> */}\r\n                        <HeatMap />\r\n                        <Posts />\r\n                    </CellProvider>\r\n                </RedditDataProvider>\r\n\r\n            </SubredditProvider>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchPage;","\nimport './App.css';\nimport MainPage from './pages/MainPage';\n\n\nimport './App.css';\n// import './normalize.css';\n// import './App.module.css';\nimport { BrowserRouter, Routes,  Route } from 'react-router-dom';\nimport SearchPage from './pages/SearchPage';\n// import Terms from './Terms';\n\nfunction App() {\n  const appName = 'redditTimerRefractored';\n  return (\n    <BrowserRouter >\n      <Routes>\n        {/* <Switch> */}\n          {/* <Route path={`/${appName}/search/:id`} component={Search} />\n          <Route path={`/${appName}/search`} exact component={Search} /> */}\n\n          {/* <Route path={`/search/:id`} element={<SearchPage />} /> */}\n          \n          <Route path={`/${appName}/search`} exact element={<SearchPage />} />\n          {/* <Route path={`/${appName}/`} exact element={<MainPage />} /> */}\n          <Route path={`/${appName}/`} exact element={<MainPage />} /> \n          {/* <Route path={`/${appName}/terms`} component={Terms} /> */}\n        {/* </Switch> */}\n      </Routes>\n    </BrowserRouter>\n    \n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}